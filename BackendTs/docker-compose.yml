version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-sti
    environment:
      MYSQL_ROOT_PASSWORD: sti@1234
      MYSQL_DATABASE: sti_mes_2025_dev
      MYSQL_USER: sti
      MYSQL_PASSWORD: sti@1234
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always

  mongodb:
    image: mongo:latest
    container_name: myts-mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      TZ: Asia/Ho_Chi_Minh
    healthcheck:
      # CHỈNH SỬA Ở ĐÂY: Sử dụng iot_gateway
      test: echo 'db.runCommand("ping").ok' | mongosh mongodb:27017/iot_gateway --quiet
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Thêm dịch vụ DbGate
  dbgate:
    image: dbgate/dbgate:latest # Sử dụng ảnh DbGate
    container_name: myts-dbgate # Tên dễ nhận biết
    ports:
      - "3001:3000" # Ánh xạ cổng: host_port (cho DbGate):container_port (cổng mặc định của DbGate)
    environment:
      DG_AUTH_ENABLED: "false" # Tùy chọn: Tắt xác thực cho môi trường dev
    # DbGate không cần phụ thuộc vào MongoDB nếu bạn cấu hình kết nối thủ công bên trong DbGate
    # Nhưng nếu muốn đảm bảo MongoDB sẵn sàng, bạn có thể thêm:
    depends_on:
      mongodb:
        condition: service_healthy

  emqx:
    image: emqx/emqx:5.0.24
    container_name: emqx_node
    ports:
      - "1883:1883"     # MQTT
      - "8883:8883"     # MQTT SSL
      - "8083:8083"     # API, MQTT over QUIC (EMQX 5.x), MQTT WebSocket
      - "8084:8084"     # Dashboard HTTPS, MQTT over QUIC/SSL (EMQX 5.x), MQTT WebSocket SSL
      - "18083:18083"   # EMQX Dashboard HTTP
    environment:
      EMQX_NAME: my_emqx_instance
      EMQX_HOST: localhost
    volumes:
      - emqx_data:/opt/emqx/data
      - emqx_etc:/opt/emqx/etc
      - emqx_log:/opt/emqx/log
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-sti
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    ports:
      - "8081:80"
    depends_on:
      - mysql
    restart: always

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: myts-backend
    ports:
      - "${PORT}:${PORT}"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      mysql:
        condition: service_started
      mongodb:
        condition: service_healthy
    restart: always

#  nginx:
#    image: nginx:stable-alpine # Sử dụng image Nginx
#    container_name: firmware_nginx
#    ports:
#      - "80:80" # Map cổng 80 của host vào cổng 80 của container Nginx
#    volumes:
#      # Mount file cấu hình Nginx
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#      # Mount thư mục chứa file firmware từ host vào trong Nginx container
#      # Thay đổi `./src/uploads` thành đường dẫn THỰC TẾ trên máy host của bạn
##      - ./src/uploads:/usr/share/nginx/html/firmware_files:ro\
#    restart: always

volumes:
  mongodb_data:
  mysql_data:
  emqx_data:
  emqx_etc:
  emqx_log: